#include<iostream>
#include<string>
using namespace std;

struct sDate
{
	short Day;
	short Month;
	short Year;
};

short ReadYear()
{
	short Year;
	cout << "\nPlease Enter a Year ? ";
	cin >> Year;
	return Year;
}

short ReadMonth()
{
	short Month;
	cout << "\nPlease Enter a Month ? ";
	cin >> Month;
	return Month;
}

short ReadDay()
{
	short Day;
	cout << "\nPlease Enter a Day ? ";
	cin >> Day;
	return Day;
}

bool IsLeapYear(short Year)
{
	return ((Year % 400 == 0) || ((Year % 4 == 0) && (Year % 100 != 0)));
}

short NumberOfDaysInAMonth(short Year, short Month)
{
	if (Month < 1 || Month > 12)
		return 0;

	short NumberOfDays[12] = { 31,28,31,30,31,30,31,31,30,31,30,31 };

	return (Month == 2) ? (IsLeapYear(Year) ? 29 : 28) : (NumberOfDays[Month - 1]);
}

short NumberOfDaysFromTheBeginingOfTheYear(short Day, short Month, short Year)
{
	short TotalDays = 0;

	for (short i = 1;i < Month;i++)
	{
		TotalDays += NumberOfDaysInAMonth(Year, i);
	}

	TotalDays += Day;

	return TotalDays;
}

sDate GetDateFromDayOrderInYear(short DayOrderInYear, short Year)
{
	sDate Date;

	short RemainnigDays = DayOrderInYear;
	short MonthDays = 0;

	Date.Year = Year;
	Date.Month = 1;

	while (true)
	{
		MonthDays = NumberOfDaysInAMonth(Year, Date.Month);

		if (RemainnigDays > MonthDays)
		{
			RemainnigDays -= MonthDays;
			Date.Month++;
		}
		else
		{
			Date.Day = RemainnigDays;
			break;
		}
	}

	return Date;
}

int main()
{
	short Day = ReadDay();
	short Month = ReadMonth();
	short Year = ReadYear();
	short DayOrderInYear = NumberOfDaysFromTheBeginingOfTheYear(Day, Month, Year);
	
	cout << "\nNumber of Days from the begining of the Year is " << DayOrderInYear << endl;


	sDate Date = GetDateFromDayOrderInYear(DayOrderInYear, Year);

	cout << "\nDate for [" << DayOrderInYear << "] is : " << Date.Day << "/" << Date.Month << "/" << Date.Year << endl;

	system("pause>0");
	return 0;
}